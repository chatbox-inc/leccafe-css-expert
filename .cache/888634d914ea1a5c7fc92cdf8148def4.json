{"remainingRequest":"/Users/mkkn/work/book/css-expert/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mkkn/work/book/css-expert/pages/.vuepress/theme/components/SidebarLink.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mkkn/work/book/css-expert/pages/.vuepress/theme/components/SidebarLink.vue","mtime":1546500482350},{"path":"/Users/mkkn/work/book/css-expert/node_modules/cache-loader/dist/cjs.js","mtime":1546347112879},{"path":"/Users/mkkn/work/book/css-expert/node_modules/babel-loader/lib/index.js","mtime":1546347404439},{"path":"/Users/mkkn/work/book/css-expert/node_modules/cache-loader/dist/cjs.js","mtime":1546347112879},{"path":"/Users/mkkn/work/book/css-expert/node_modules/vue-loader/lib/index.js","mtime":1546347116044}],"contextDependencies":[],"result":["\nimport { isActive, hashRE, groupHeaders } from '../layouts/util'\n\nexport default {\n  functional: true,\n\n  props: ['item'],\n\n  render (h, { parent: { $page, $site, $route }, props: { item }}) {\n    // use custom active class matching logic\n    // due to edge case of paths ending with / + hash\n    const selfActive = isActive($route, item.path)\n    // for sidebar: auto pages, a hash link should be active if one of its child\n    // matches\n    const active = item.type === 'auto'\n      ? selfActive || item.children.some(c => isActive($route, item.basePath + '#' + c.slug))\n      : selfActive\n    const link = renderLink(h, item.path, item.title || item.path, active)\n    const configDepth = $page.frontmatter.sidebarDepth != null\n      ? $page.frontmatter.sidebarDepth\n      : $site.themeConfig.sidebarDepth\n    const maxDepth = configDepth == null ? 1 : configDepth\n    const displayAllHeaders = !!$site.themeConfig.displayAllHeaders\n    if (item.type === 'auto') {\n      return [link, renderChildren(h, item.children, item.basePath, $route, maxDepth)]\n    } else if ((active || displayAllHeaders) && item.headers && !hashRE.test(item.path)) {\n      const children = groupHeaders(item.headers)\n      return [link, renderChildren(h, children, item.path, $route, maxDepth)]\n    } else {\n      return link\n    }\n  }\n}\n\nfunction renderLink (h, to, text, active) {\n  return h('router-link', {\n    props: {\n      to,\n      activeClass: '',\n      exactActiveClass: ''\n    },\n    class: {\n      active,\n      'sidebar-link': true\n    }\n  }, text)\n}\n\nfunction renderChildren (h, children, path, route, maxDepth, depth = 1) {\n  if (!children || depth > maxDepth) return null\n  return h('ul', { class: 'sidebar-sub-headers' }, children.map(c => {\n    const active = isActive(route, path + '#' + c.slug)\n    return h('li', { class: 'sidebar-sub-header' }, [\n      renderLink(h, path + '#' + c.slug, c.title, active),\n      renderChildren(h, c.children, path, route, maxDepth, depth + 1)\n    ])\n  }))\n}\n",null]}